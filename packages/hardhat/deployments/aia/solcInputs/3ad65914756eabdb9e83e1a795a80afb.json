{
  "language": "Solidity",
  "sources": {
    "contracts/Receive.sol": {
      "content": "//SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.9.0;\n\ncontract Receive {\n\t// 收到eth事件，记录amount和gas\n\tevent Log(uint amount, uint gas);\n\taddress owner;\n\n\tconstructor() {\n\t\towner = msg.sender;\n\t}\n\n\tmodifier isOwner() {\n\t\t// msg.sender: predefined variable that represents address of the account that called the current function\n\t\trequire(msg.sender == owner, \"Not the Owner\");\n\t\t_;\n\t}\n\n\treceive() external payable {\n\t\temit Log(msg.value, gasleft());\n\t}\n\n\t// 返回合约ETH余额\n\tfunction getBalance() public view returns (uint) {\n\t\treturn address(this).balance;\n\t}\n\n\tfunction payForContract() public payable {}\n\n\t// delete the contract\n\tfunction deleteContract() public isOwner {\n\t\tselfdestruct(payable(msg.sender));\n\t}\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "evmVersion": "paris",
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}