{
  "address": "0x86c66D19b87351c1AD7125889Bcb382f5baFABc7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implemention",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CallSuccess",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "x",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x16490cb54bc2c320e5c1375970f908a1746b234bccb4b95958c548bd7cb9b1e4",
  "receipt": {
    "to": null,
    "from": "0x6080D00fc35A843eBeA436B4E2244fEE552595a6",
    "contractAddress": "0x86c66D19b87351c1AD7125889Bcb382f5baFABc7",
    "transactionIndex": 0,
    "gasUsed": "152070",
    "logsBloom": "0x
    "blockHash": "0x2230ae01b8d15294783a87f8e44c7471776d673ca174b48bad55254f0bcdffcc",
    "transactionHash": "0x16490cb54bc2c320e5c1375970f908a1746b234bccb4b95958c548bd7cb9b1e4",
    "logs": [],
    "blockNumber": 36729632,
    "cumulativeGasUsed": "152070",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6b8AcB313683B03ED861Cd3504BAfe8001710818"
  ],
  "numDeployments": 3,
  "solcInputHash": "03d32b2fdd8466e2aaddaea30b8b14dc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implemention\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CallSuccess\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"x\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n\\t/**\\n\\t * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n\\t * another (`to`).\\n\\t *\\n\\t * Note that `value` may be zero.\\n\\t */\\n\\tevent Transfer(address indexed from, address indexed to, uint256 value);\\n\\n\\t/**\\n\\t * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n\\t * a call to {approve}. `value` is the new allowance.\\n\\t */\\n\\tevent Approval(\\n\\t\\taddress indexed owner,\\n\\t\\taddress indexed spender,\\n\\t\\tuint256 value\\n\\t);\\n\\n\\t/**\\n\\t * @dev Returns the value of tokens in existence.\\n\\t */\\n\\tfunction totalSupply() external view returns (uint256);\\n\\n\\t/**\\n\\t * @dev Returns the value of tokens owned by `account`.\\n\\t */\\n\\tfunction balanceOf(address account) external view returns (uint256);\\n\\n\\t/**\\n\\t * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n\\t *\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\n\\t *\\n\\t * Emits a {Transfer} event.\\n\\t */\\n\\tfunction transfer(address to, uint256 value) external returns (bool);\\n\\n\\t/**\\n\\t * @dev Returns the remaining number of tokens that `spender` will be\\n\\t * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n\\t * zero by default.\\n\\t *\\n\\t * This value changes when {approve} or {transferFrom} are called.\\n\\t */\\n\\tfunction allowance(\\n\\t\\taddress owner,\\n\\t\\taddress spender\\n\\t) external view returns (uint256);\\n\\n\\t/**\\n\\t * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n\\t * caller's tokens.\\n\\t *\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\n\\t *\\n\\t * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n\\t * that someone may use both the old and the new allowance by unfortunate\\n\\t * transaction ordering. One possible solution to mitigate this race\\n\\t * condition is to first reduce the spender's allowance to 0 and set the\\n\\t * desired value afterwards:\\n\\t * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n\\t *\\n\\t * Emits an {Approval} event.\\n\\t */\\n\\tfunction approve(address spender, uint256 value) external returns (bool);\\n\\n\\t/**\\n\\t * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n\\t * allowance mechanism. `value` is then deducted from the caller's\\n\\t * allowance.\\n\\t *\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\n\\t *\\n\\t * Emits a {Transfer} event.\\n\\t */\\n\\tfunction transferFrom(\\n\\t\\taddress from,\\n\\t\\taddress to,\\n\\t\\tuint256 value\\n\\t) external returns (bool);\\n}\\n\",\"keccak256\":\"0xf47105c9918dc8c05e4cef927a186292f742eac08d1efa484dc5f0de203cb151\",\"license\":\"MIT\"},\"contracts/Proxy.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract Proxy {\\n\\taddress public implementation;\\n\\tuint256 public x = 50;\\n\\tevent CallSuccess();\\n\\n\\tconstructor(address _implemention) {\\n\\t\\timplementation = _implemention;\\n\\t}\\n\\n\\treceive() external payable {}\\n\\n\\t/**\\n\\t * @dev \\u56de\\u8c03\\u51fd\\u6570\\uff0c\\u5c06\\u672c\\u5408\\u7ea6\\u7684\\u8c03\\u7528\\u59d4\\u6258\\u7ed9 `implementation` \\u5408\\u7ea6\\n\\t * \\u901a\\u8fc7assembly\\uff0c\\u8ba9\\u56de\\u8c03\\u51fd\\u6570\\u4e5f\\u80fd\\u6709\\u8fd4\\u56de\\u503c\\n\\t */\\n\\tfallback() external payable {\\n\\t\\taddress _implementation = implementation;\\n\\t\\tassembly {\\n\\t\\t\\t// \\u5c06msg.data\\u62f7\\u8d1d\\u5230\\u5185\\u5b58\\u91cc\\n\\t\\t\\t// calldatacopy\\u64cd\\u4f5c\\u7801\\u7684\\u53c2\\u6570: \\u5185\\u5b58\\u8d77\\u59cb\\u4f4d\\u7f6e\\uff0ccalldata\\u8d77\\u59cb\\u4f4d\\u7f6e\\uff0ccalldata\\u957f\\u5ea6\\n\\t\\t\\tcalldatacopy(0, 0, calldatasize())\\n\\n\\t\\t\\t// \\u5229\\u7528delegatecall\\u8c03\\u7528implementation\\u5408\\u7ea6\\n\\t\\t\\t// delegatecall\\u64cd\\u4f5c\\u7801\\u7684\\u53c2\\u6570\\uff1agas, \\u76ee\\u6807\\u5408\\u7ea6\\u5730\\u5740\\uff0cinput mem\\u8d77\\u59cb\\u4f4d\\u7f6e\\uff0cinput mem\\u957f\\u5ea6\\uff0coutput area mem\\u8d77\\u59cb\\u4f4d\\u7f6e\\uff0coutput area mem\\u957f\\u5ea6\\n\\t\\t\\t// output area\\u8d77\\u59cb\\u4f4d\\u7f6e\\u548c\\u957f\\u5ea6\\u4f4d\\u7f6e\\uff0c\\u6240\\u4ee5\\u8bbe\\u4e3a0\\n\\t\\t\\t// delegatecall\\u6210\\u529f\\u8fd4\\u56de1\\uff0c\\u5931\\u8d25\\u8fd4\\u56de0\\n\\t\\t\\tlet result := delegatecall(\\n\\t\\t\\t\\tgas(),\\n\\t\\t\\t\\t_implementation,\\n\\t\\t\\t\\t0,\\n\\t\\t\\t\\tcalldatasize(),\\n\\t\\t\\t\\t0,\\n\\t\\t\\t\\t0\\n\\t\\t\\t)\\n\\n\\t\\t\\t// \\u5c06return data\\u62f7\\u8d1d\\u5230\\u5185\\u5b58\\n\\t\\t\\t// returndata\\u64cd\\u4f5c\\u7801\\u7684\\u53c2\\u6570\\uff1a\\u5185\\u5b58\\u8d77\\u59cb\\u4f4d\\u7f6e\\uff0creturndata\\u8d77\\u59cb\\u4f4d\\u7f6e\\uff0creturndata\\u957f\\u5ea6\\n\\t\\t\\treturndatacopy(0, 0, returndatasize())\\n\\n\\t\\t\\tswitch result\\n\\t\\t\\t// \\u5982\\u679cdelegate call\\u5931\\u8d25\\uff0crevert\\n\\t\\t\\tcase 0 {\\n\\t\\t\\t\\trevert(0, returndatasize())\\n\\t\\t\\t}\\n\\t\\t\\t// \\u5982\\u679cdelegate call\\u6210\\u529f\\uff0c\\u8fd4\\u56demem\\u8d77\\u59cb\\u4f4d\\u7f6e\\u4e3a0\\uff0c\\u957f\\u5ea6\\u4e3areturndatasize()\\u7684\\u6570\\u636e\\uff08\\u683c\\u5f0f\\u4e3abytes\\uff09\\n\\t\\t\\tdefault {\\n\\t\\t\\t\\treturn(0, returndatasize())\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0x70857722e579814c4a9895770e9b3084f930620aa8a9c7eae05cfaffc7b82c65\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052603260015534801561001557600080fd5b5060405161018838038061018883398101604081905261003491610059565b600080546001600160a01b0319166001600160a01b0392909216919091179055610089565b60006020828403121561006b57600080fd5b81516001600160a01b038116811461008257600080fd5b9392505050565b60f1806100976000396000f3fe60806040526004361060295760003560e01c80630c55699c14605f5780635c60da1b14608657602f565b36602f57005b600080546001600160a01b03169036908037600080366000845af43d6000803e808015605a573d6000f35b3d6000fd5b348015606a57600080fd5b50607360015481565b6040519081526020015b60405180910390f35b348015609157600080fd5b5060005460a4906001600160a01b031681565b6040516001600160a01b039091168152602001607d56fea2646970667358221220dcdcc28d48ee9901a1b1f8c3fa07bd5a4db8aa1da26577b3a6f7cf9c02689f7964736f6c63430008140033",
  "deployedBytecode": "0x60806040526004361060295760003560e01c80630c55699c14605f5780635c60da1b14608657602f565b36602f57005b600080546001600160a01b03169036908037600080366000845af43d6000803e808015605a573d6000f35b3d6000fd5b348015606a57600080fd5b50607360015481565b6040519081526020015b60405180910390f35b348015609157600080fd5b5060005460a4906001600160a01b031681565b6040516001600160a01b039091168152602001607d56fea2646970667358221220dcdcc28d48ee9901a1b1f8c3fa07bd5a4db8aa1da26577b3a6f7cf9c02689f7964736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 82,
        "contract": "contracts/Proxy.sol:Proxy",
        "label": "implementation",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 85,
        "contract": "contracts/Proxy.sol:Proxy",
        "label": "x",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}